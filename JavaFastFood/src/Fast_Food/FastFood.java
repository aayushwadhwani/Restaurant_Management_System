
package Fast_Food;
import java.awt.event.KeyEvent;
import javax.swing.*;

/**
 *
 * @author Aayush Wadhwani
 */
public class FastFood extends javax.swing.JFrame {
    double pepsi = 50, fanta = 45 , dew = 60 ;
    double normal_maggie = 30 , cheese_maggie = 45;
    double water = 20 , tea = 15 , coffee = 20;
    double vanilla_icecream = 40 , chocklate_icecream = 45 , mellojello_icecream = 55;
    double normal_pizza = 130 ,cheese_pizza = 180 , corn_pizza = 160;
    double normal_burger = 40, mayonese_burger = 50;
    double tax = 5 , total , change , cost;
    int itemDetails[] = new int[16];
    /**
     * Creates new form FastFood
     */
    public FastFood() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelForName = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        panelForPizzaAndBurger = new javax.swing.JPanel();
        fieldofPizza = new javax.swing.JTextField();
        Menu3 = new javax.swing.JTextField();
        QuantityBOught1 = new javax.swing.JTextField();
        checkMayoneseBurger = new javax.swing.JCheckBox();
        checkCornPizza = new javax.swing.JCheckBox();
        checkCheesePizza = new javax.swing.JCheckBox();
        textNormalPizza = new javax.swing.JTextField();
        textCheesePizza = new javax.swing.JTextField();
        textCornPizza = new javax.swing.JTextField();
        fieldofBurger = new javax.swing.JTextField();
        checkNormalPizza = new javax.swing.JCheckBox();
        checkNormalBurger = new javax.swing.JCheckBox();
        textNormalBurger = new javax.swing.JTextField();
        textMayoneseBurger = new javax.swing.JTextField();
        panelForSoftDrinksAndMaggie = new javax.swing.JPanel();
        checkPepsi = new javax.swing.JCheckBox();
        fieldofSoftDrinks = new javax.swing.JTextField();
        checkDew = new javax.swing.JCheckBox();
        checkCheeseMaggie = new javax.swing.JCheckBox();
        fieldofMaggies = new javax.swing.JTextField();
        checkNormalMaggie = new javax.swing.JCheckBox();
        checkFanta = new javax.swing.JCheckBox();
        textNormalMaggie = new javax.swing.JTextField();
        textPepsi = new javax.swing.JTextField();
        textFanta = new javax.swing.JTextField();
        Menu = new javax.swing.JTextField();
        QuantityBOught = new javax.swing.JTextField();
        textDew = new javax.swing.JTextField();
        textCheeseMaggie = new javax.swing.JTextField();
        panelForDrinksAndIceCreams = new javax.swing.JPanel();
        fieldofDrinks = new javax.swing.JTextField();
        fieldofIceCream = new javax.swing.JTextField();
        checkCoffee = new javax.swing.JCheckBox();
        checkChocklateIceCream = new javax.swing.JCheckBox();
        checkTea = new javax.swing.JCheckBox();
        textWater = new javax.swing.JTextField();
        textTea = new javax.swing.JTextField();
        textCoffee = new javax.swing.JTextField();
        checkWater = new javax.swing.JCheckBox();
        checkVanillaIceCream = new javax.swing.JCheckBox();
        checkMelloJelloIceCream = new javax.swing.JCheckBox();
        textVanillaIceCream = new javax.swing.JTextField();
        textChocklateIceCream = new javax.swing.JTextField();
        textMelloJelloIcecream = new javax.swing.JTextField();
        Menu1 = new javax.swing.JTextField();
        QuantityBOught2 = new javax.swing.JTextField();
        Menu2 = new javax.swing.JTextField();
        QuantityBOught3 = new javax.swing.JTextField();
        panelForBilling = new javax.swing.JPanel();
        buttonTotal = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        CashMethods = new javax.swing.JComboBox<>();
        textCashEntered = new javax.swing.JTextField();
        panelForBillingCounter = new javax.swing.JPanel();
        textChange = new javax.swing.JTextField();
        textChangeAnswer = new javax.swing.JTextField();
        textTax = new javax.swing.JTextField();
        textTotal = new javax.swing.JTextField();
        textTaxAnswer = new javax.swing.JTextField();
        textTotalAnswer = new javax.swing.JTextField();
        buttonReset = new javax.swing.JButton();
        buttonExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fast Food");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanelForName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(204, 204, 204));
        jTextField2.setFont(new java.awt.Font("Footlight MT Light", 1, 36)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("MAK Fast Food");

        javax.swing.GroupLayout PanelForNameLayout = new javax.swing.GroupLayout(PanelForName);
        PanelForName.setLayout(PanelForNameLayout);
        PanelForNameLayout.setHorizontalGroup(
            PanelForNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelForNameLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 1199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(226, Short.MAX_VALUE))
        );
        PanelForNameLayout.setVerticalGroup(
            PanelForNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelForNameLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        getContentPane().add(PanelForName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1520, 130));

        panelForPizzaAndBurger.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        fieldofPizza.setEditable(false);
        fieldofPizza.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        fieldofPizza.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldofPizza.setText("Pizza");
        fieldofPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldofPizzaActionPerformed(evt);
            }
        });

        Menu3.setEditable(false);
        Menu3.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        Menu3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Menu3.setText("Menu");

        QuantityBOught1.setEditable(false);
        QuantityBOught1.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        QuantityBOught1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        QuantityBOught1.setText("Quantity Bought");

        checkMayoneseBurger.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        checkMayoneseBurger.setText("MayoneseBurger");
        checkMayoneseBurger.setToolTipText("Rs 50");
        checkMayoneseBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkMayoneseBurgerActionPerformed(evt);
            }
        });

        checkCornPizza.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        checkCornPizza.setText("Corn Pizzza");
        checkCornPizza.setToolTipText("Rs 160");
        checkCornPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCornPizzaActionPerformed(evt);
            }
        });

        checkCheesePizza.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        checkCheesePizza.setText("Cheese Pizzza");
        checkCheesePizza.setToolTipText("Rs 180");
        checkCheesePizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCheesePizzaActionPerformed(evt);
            }
        });

        textNormalPizza.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textNormalPizza.setText("0");
        textNormalPizza.setEnabled(false);
        textNormalPizza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textNormalPizzaKeyTyped(evt);
            }
        });

        textCheesePizza.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textCheesePizza.setText("0");
        textCheesePizza.setEnabled(false);
        textCheesePizza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textCheesePizzaKeyTyped(evt);
            }
        });

        textCornPizza.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textCornPizza.setText("0");
        textCornPizza.setEnabled(false);
        textCornPizza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textCornPizzaKeyTyped(evt);
            }
        });

        fieldofBurger.setEditable(false);
        fieldofBurger.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        fieldofBurger.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldofBurger.setText("Burger");
        fieldofBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldofBurgerActionPerformed(evt);
            }
        });

        checkNormalPizza.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        checkNormalPizza.setText("Normal Pizzza");
        checkNormalPizza.setToolTipText("Rs 130");
        checkNormalPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkNormalPizzaActionPerformed(evt);
            }
        });

        checkNormalBurger.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        checkNormalBurger.setText("Normal Burger");
        checkNormalBurger.setToolTipText("Rs 40");
        checkNormalBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkNormalBurgerActionPerformed(evt);
            }
        });

        textNormalBurger.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textNormalBurger.setText("0");
        textNormalBurger.setEnabled(false);
        textNormalBurger.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textNormalBurgerKeyTyped(evt);
            }
        });

        textMayoneseBurger.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textMayoneseBurger.setText("0");
        textMayoneseBurger.setEnabled(false);
        textMayoneseBurger.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textMayoneseBurgerKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelForPizzaAndBurgerLayout = new javax.swing.GroupLayout(panelForPizzaAndBurger);
        panelForPizzaAndBurger.setLayout(panelForPizzaAndBurgerLayout);
        panelForPizzaAndBurgerLayout.setHorizontalGroup(
            panelForPizzaAndBurgerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelForPizzaAndBurgerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelForPizzaAndBurgerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fieldofPizza, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                    .addGroup(panelForPizzaAndBurgerLayout.createSequentialGroup()
                        .addComponent(Menu3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(QuantityBOught1, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))
                    .addGroup(panelForPizzaAndBurgerLayout.createSequentialGroup()
                        .addComponent(checkCornPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textCornPizza))
                    .addGroup(panelForPizzaAndBurgerLayout.createSequentialGroup()
                        .addComponent(checkNormalPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(textNormalPizza))
                    .addGroup(panelForPizzaAndBurgerLayout.createSequentialGroup()
                        .addComponent(checkCheesePizza, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textCheesePizza))
                    .addComponent(fieldofBurger, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                    .addGroup(panelForPizzaAndBurgerLayout.createSequentialGroup()
                        .addGroup(panelForPizzaAndBurgerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(checkMayoneseBurger, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkNormalBurger, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelForPizzaAndBurgerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textNormalBurger)
                            .addComponent(textMayoneseBurger, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        panelForPizzaAndBurgerLayout.setVerticalGroup(
            panelForPizzaAndBurgerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelForPizzaAndBurgerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fieldofPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelForPizzaAndBurgerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Menu3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuantityBOught1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelForPizzaAndBurgerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelForPizzaAndBurgerLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textNormalPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelForPizzaAndBurgerLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(checkNormalPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41)
                .addGroup(panelForPizzaAndBurgerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textCheesePizza)
                    .addComponent(checkCheesePizza, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(panelForPizzaAndBurgerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkCornPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCornPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(fieldofBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(panelForPizzaAndBurgerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkNormalBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textNormalBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelForPizzaAndBurgerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkMayoneseBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textMayoneseBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        getContentPane().add(panelForPizzaAndBurger, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 150, 370, 640));

        panelForSoftDrinksAndMaggie.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        checkPepsi.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        checkPepsi.setText("Pepsi");
        checkPepsi.setToolTipText("Rs 50 per 500 ml");
        checkPepsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkPepsiActionPerformed(evt);
            }
        });

        fieldofSoftDrinks.setEditable(false);
        fieldofSoftDrinks.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        fieldofSoftDrinks.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldofSoftDrinks.setText("Soft Drinks");
        fieldofSoftDrinks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldofSoftDrinksActionPerformed(evt);
            }
        });

        checkDew.setFont(new java.awt.Font("Footlight MT Light", 0, 14)); // NOI18N
        checkDew.setText("Mountain_Dew");
        checkDew.setToolTipText("Rs 60 Per 500 ml");
        checkDew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkDewActionPerformed(evt);
            }
        });

        checkCheeseMaggie.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        checkCheeseMaggie.setText("Cheese Maggi");
        checkCheeseMaggie.setToolTipText("Rs 45 Per Bowl");
        checkCheeseMaggie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCheeseMaggieActionPerformed(evt);
            }
        });

        fieldofMaggies.setEditable(false);
        fieldofMaggies.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        fieldofMaggies.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldofMaggies.setText("Maggies");
        fieldofMaggies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldofMaggiesActionPerformed(evt);
            }
        });

        checkNormalMaggie.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        checkNormalMaggie.setText("Normal Maggi");
        checkNormalMaggie.setToolTipText("rs 30 Per Bowl");
        checkNormalMaggie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkNormalMaggieActionPerformed(evt);
            }
        });

        checkFanta.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        checkFanta.setText("Fanta");
        checkFanta.setToolTipText("Rs 45 per 500ml");
        checkFanta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkFantaActionPerformed(evt);
            }
        });

        textNormalMaggie.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textNormalMaggie.setText("0");
        textNormalMaggie.setEnabled(false);
        textNormalMaggie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textNormalMaggieKeyTyped(evt);
            }
        });

        textPepsi.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textPepsi.setText("0");
        textPepsi.setEnabled(false);
        textPepsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPepsiActionPerformed(evt);
            }
        });
        textPepsi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textPepsiKeyTyped(evt);
            }
        });

        textFanta.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textFanta.setText("0");
        textFanta.setEnabled(false);
        textFanta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFantaActionPerformed(evt);
            }
        });
        textFanta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFantaKeyTyped(evt);
            }
        });

        Menu.setEditable(false);
        Menu.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        Menu.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Menu.setText("Menu");

        QuantityBOught.setEditable(false);
        QuantityBOught.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        QuantityBOught.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        QuantityBOught.setText("Quantity Bought");

        textDew.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textDew.setText("0");
        textDew.setEnabled(false);
        textDew.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textDewKeyTyped(evt);
            }
        });

        textCheeseMaggie.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textCheeseMaggie.setText("0");
        textCheeseMaggie.setEnabled(false);
        textCheeseMaggie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textCheeseMaggieKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelForSoftDrinksAndMaggieLayout = new javax.swing.GroupLayout(panelForSoftDrinksAndMaggie);
        panelForSoftDrinksAndMaggie.setLayout(panelForSoftDrinksAndMaggieLayout);
        panelForSoftDrinksAndMaggieLayout.setHorizontalGroup(
            panelForSoftDrinksAndMaggieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelForSoftDrinksAndMaggieLayout.createSequentialGroup()
                .addComponent(checkCheeseMaggie, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(textCheeseMaggie)
                .addGap(12, 12, 12))
            .addGroup(panelForSoftDrinksAndMaggieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelForSoftDrinksAndMaggieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fieldofSoftDrinks)
                    .addComponent(fieldofMaggies, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelForSoftDrinksAndMaggieLayout.createSequentialGroup()
                        .addComponent(checkNormalMaggie, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(textNormalMaggie))
                    .addGroup(panelForSoftDrinksAndMaggieLayout.createSequentialGroup()
                        .addGroup(panelForSoftDrinksAndMaggieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Menu)
                            .addComponent(checkFanta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkDew, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addComponent(checkPepsi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelForSoftDrinksAndMaggieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFanta, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textPepsi)
                            .addComponent(QuantityBOught, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                            .addComponent(textDew, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        panelForSoftDrinksAndMaggieLayout.setVerticalGroup(
            panelForSoftDrinksAndMaggieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelForSoftDrinksAndMaggieLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(fieldofSoftDrinks, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelForSoftDrinksAndMaggieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuantityBOught, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelForSoftDrinksAndMaggieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkPepsi, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textPepsi, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(panelForSoftDrinksAndMaggieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(checkFanta, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                    .addComponent(textFanta))
                .addGap(18, 18, 18)
                .addGroup(panelForSoftDrinksAndMaggieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelForSoftDrinksAndMaggieLayout.createSequentialGroup()
                        .addComponent(checkDew, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelForSoftDrinksAndMaggieLayout.createSequentialGroup()
                        .addComponent(textDew, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(fieldofMaggies, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelForSoftDrinksAndMaggieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkNormalMaggie, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textNormalMaggie, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelForSoftDrinksAndMaggieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkCheeseMaggie, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCheeseMaggie, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        getContentPane().add(panelForSoftDrinksAndMaggie, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 380, 640));

        panelForDrinksAndIceCreams.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        panelForDrinksAndIceCreams.setToolTipText("Rs 20 per 500 ml");

        fieldofDrinks.setEditable(false);
        fieldofDrinks.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        fieldofDrinks.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldofDrinks.setText("Drinks");
        fieldofDrinks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldofDrinksActionPerformed(evt);
            }
        });

        fieldofIceCream.setEditable(false);
        fieldofIceCream.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        fieldofIceCream.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fieldofIceCream.setText("Ice Creams");
        fieldofIceCream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldofIceCreamActionPerformed(evt);
            }
        });

        checkCoffee.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        checkCoffee.setText("Coffee");
        checkCoffee.setToolTipText("Rs 20 perCup");
        checkCoffee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCoffeeActionPerformed(evt);
            }
        });

        checkChocklateIceCream.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        checkChocklateIceCream.setText("Chocklate IceCream");
        checkChocklateIceCream.setToolTipText("Rs 45 (2 Scoops)");
        checkChocklateIceCream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkChocklateIceCreamActionPerformed(evt);
            }
        });

        checkTea.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        checkTea.setText("Tea");
        checkTea.setToolTipText("Rs 15 per Cup");
        checkTea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkTeaActionPerformed(evt);
            }
        });

        textWater.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textWater.setText("0");
        textWater.setEnabled(false);
        textWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textWaterActionPerformed(evt);
            }
        });
        textWater.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textWaterKeyTyped(evt);
            }
        });

        textTea.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textTea.setText("0");
        textTea.setEnabled(false);
        textTea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textTeaActionPerformed(evt);
            }
        });
        textTea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textTeaKeyTyped(evt);
            }
        });

        textCoffee.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textCoffee.setText("0");
        textCoffee.setEnabled(false);
        textCoffee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCoffeeActionPerformed(evt);
            }
        });
        textCoffee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textCoffeeKeyTyped(evt);
            }
        });

        checkWater.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        checkWater.setText("Water");
        checkWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkWaterActionPerformed(evt);
            }
        });

        checkVanillaIceCream.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        checkVanillaIceCream.setText("Vanilla IceCream");
        checkVanillaIceCream.setToolTipText("Rs 40 (2 Scoops)");
        checkVanillaIceCream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkVanillaIceCreamActionPerformed(evt);
            }
        });

        checkMelloJelloIceCream.setFont(new java.awt.Font("Footlight MT Light", 0, 14)); // NOI18N
        checkMelloJelloIceCream.setText("Mello Jello IceCream");
        checkMelloJelloIceCream.setToolTipText("Rs 55 (2 Scoops)");
        checkMelloJelloIceCream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkMelloJelloIceCreamActionPerformed(evt);
            }
        });

        textVanillaIceCream.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textVanillaIceCream.setText("0");
        textVanillaIceCream.setEnabled(false);
        textVanillaIceCream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textVanillaIceCreamActionPerformed(evt);
            }
        });
        textVanillaIceCream.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textVanillaIceCreamKeyTyped(evt);
            }
        });

        textChocklateIceCream.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textChocklateIceCream.setText("0");
        textChocklateIceCream.setEnabled(false);
        textChocklateIceCream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textChocklateIceCreamActionPerformed(evt);
            }
        });
        textChocklateIceCream.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textChocklateIceCreamKeyTyped(evt);
            }
        });

        textMelloJelloIcecream.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textMelloJelloIcecream.setText("0");
        textMelloJelloIcecream.setEnabled(false);
        textMelloJelloIcecream.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textMelloJelloIcecreamKeyTyped(evt);
            }
        });

        Menu1.setEditable(false);
        Menu1.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        Menu1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Menu1.setText("Menu");

        QuantityBOught2.setEditable(false);
        QuantityBOught2.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        QuantityBOught2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        QuantityBOught2.setText("Quantity Bought");

        Menu2.setEditable(false);
        Menu2.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        Menu2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Menu2.setText("Menu");

        QuantityBOught3.setEditable(false);
        QuantityBOught3.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        QuantityBOught3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        QuantityBOught3.setText("Quantity Bought");

        javax.swing.GroupLayout panelForDrinksAndIceCreamsLayout = new javax.swing.GroupLayout(panelForDrinksAndIceCreams);
        panelForDrinksAndIceCreams.setLayout(panelForDrinksAndIceCreamsLayout);
        panelForDrinksAndIceCreamsLayout.setHorizontalGroup(
            panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelForDrinksAndIceCreamsLayout.createSequentialGroup()
                .addGroup(panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelForDrinksAndIceCreamsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(checkCoffee, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textTea, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(textCoffee)))
                    .addGroup(panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(panelForDrinksAndIceCreamsLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(fieldofDrinks, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(panelForDrinksAndIceCreamsLayout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(Menu1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(QuantityBOught2))))
                        .addGroup(panelForDrinksAndIceCreamsLayout.createSequentialGroup()
                            .addGap(21, 21, 21)
                            .addGroup(panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(checkTea, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(checkWater, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(textWater))))
                .addGroup(panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelForDrinksAndIceCreamsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelForDrinksAndIceCreamsLayout.createSequentialGroup()
                                .addComponent(checkMelloJelloIceCream, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(textMelloJelloIcecream, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                            .addComponent(fieldofIceCream, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelForDrinksAndIceCreamsLayout.createSequentialGroup()
                                .addComponent(checkChocklateIceCream)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textChocklateIceCream, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelForDrinksAndIceCreamsLayout.createSequentialGroup()
                        .addGroup(panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelForDrinksAndIceCreamsLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Menu2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(QuantityBOught3))
                            .addGroup(panelForDrinksAndIceCreamsLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(checkVanillaIceCream, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textVanillaIceCream)))
                        .addGap(27, 27, 27)))
                .addContainerGap())
        );
        panelForDrinksAndIceCreamsLayout.setVerticalGroup(
            panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelForDrinksAndIceCreamsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldofDrinks, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldofIceCream, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Menu1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuantityBOught2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Menu2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QuantityBOught3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textWater, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkWater, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(checkVanillaIceCream, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textVanillaIceCream, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textTea, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(checkChocklateIceCream, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textChocklateIceCream, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(checkTea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22)
                .addGroup(panelForDrinksAndIceCreamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkCoffee, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCoffee, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkMelloJelloIceCream, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textMelloJelloIcecream, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        getContentPane().add(panelForDrinksAndIceCreams, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 150, 760, 370));

        panelForBilling.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        buttonTotal.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        buttonTotal.setText("Total");
        buttonTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTotalActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Payment Method");

        CashMethods.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        CashMethods.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Debit Card", "Online" }));
        CashMethods.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashMethodsActionPerformed(evt);
            }
        });

        textCashEntered.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textCashEnteredKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelForBillingLayout = new javax.swing.GroupLayout(panelForBilling);
        panelForBilling.setLayout(panelForBillingLayout);
        panelForBillingLayout.setHorizontalGroup(
            panelForBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelForBillingLayout.createSequentialGroup()
                .addGroup(panelForBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelForBillingLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField1))
                    .addGroup(panelForBillingLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(panelForBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CashMethods, 0, 259, Short.MAX_VALUE)
                            .addComponent(textCashEntered))
                        .addGap(0, 50, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelForBillingLayout.setVerticalGroup(
            panelForBillingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelForBillingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(CashMethods, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textCashEntered, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(panelForBilling, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 530, 370, 260));

        panelForBillingCounter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        textChange.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textChange.setText("Change");

        textChangeAnswer.setEditable(false);
        textChangeAnswer.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N

        textTax.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textTax.setText("Tax");

        textTotal.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textTotal.setText("Total");

        textTaxAnswer.setEditable(false);
        textTaxAnswer.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N

        textTotalAnswer.setEditable(false);
        textTotalAnswer.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        textTotalAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textTotalAnswerActionPerformed(evt);
            }
        });

        buttonReset.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        buttonReset.setText("Reset");
        buttonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonResetActionPerformed(evt);
            }
        });

        buttonExit.setFont(new java.awt.Font("Footlight MT Light", 0, 18)); // NOI18N
        buttonExit.setText("Exit");
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelForBillingCounterLayout = new javax.swing.GroupLayout(panelForBillingCounter);
        panelForBillingCounter.setLayout(panelForBillingCounterLayout);
        panelForBillingCounterLayout.setHorizontalGroup(
            panelForBillingCounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelForBillingCounterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelForBillingCounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelForBillingCounterLayout.createSequentialGroup()
                        .addComponent(textChange, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(textChangeAnswer))
                    .addGroup(panelForBillingCounterLayout.createSequentialGroup()
                        .addComponent(textTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(textTotalAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
                    .addGroup(panelForBillingCounterLayout.createSequentialGroup()
                        .addComponent(textTax, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(textTaxAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(panelForBillingCounterLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(buttonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelForBillingCounterLayout.setVerticalGroup(
            panelForBillingCounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelForBillingCounterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelForBillingCounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textChange, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(textChangeAnswer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelForBillingCounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textTax, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(textTaxAnswer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelForBillingCounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(textTotalAnswer))
                .addGap(18, 18, 18)
                .addGroup(panelForBillingCounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        getContentPane().add(panelForBillingCounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 530, 380, 260));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldofSoftDrinksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldofSoftDrinksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldofSoftDrinksActionPerformed

    private void checkDewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkDewActionPerformed
if(checkDew.isSelected())
        {
            textDew.setEnabled(true);
            textDew.requestFocus();
            textDew.setText("");
        }
        else
        {
            textDew.setEnabled(false);
            textDew.setText("0");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkDewActionPerformed

    private void checkCheeseMaggieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCheeseMaggieActionPerformed
if(checkCheeseMaggie.isSelected())
        {
            textCheeseMaggie.setEnabled(true);
            textCheeseMaggie.requestFocus();
            textCheeseMaggie.setText("");
        }
        else
        {
            textCheeseMaggie.setEnabled(false);
            textCheeseMaggie.setText("0");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkCheeseMaggieActionPerformed

    private void fieldofMaggiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldofMaggiesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldofMaggiesActionPerformed

    private void checkFantaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkFantaActionPerformed
if(checkFanta.isSelected())
        {
            textFanta.setEnabled(true);
            textFanta.requestFocus();
            textFanta.setText("");
        }
        else
        {
            textFanta.setEnabled(false);
            textFanta.setText("0");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkFantaActionPerformed

    private void checkMelloJelloIceCreamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkMelloJelloIceCreamActionPerformed
if(checkMelloJelloIceCream.isSelected())
        {
            textMelloJelloIcecream.setEnabled(true);
            textMelloJelloIcecream.requestFocus();
            textMelloJelloIcecream.setText("");
        }
        else
        {
            textMelloJelloIcecream.setEnabled(false);
            textMelloJelloIcecream.setText("0");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkMelloJelloIceCreamActionPerformed

    private void fieldofIceCreamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldofIceCreamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldofIceCreamActionPerformed

    private void fieldofDrinksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldofDrinksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldofDrinksActionPerformed

    private void fieldofPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldofPizzaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldofPizzaActionPerformed

    private void fieldofBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldofBurgerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldofBurgerActionPerformed

    private JFrame frame;
    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed
        // TODO add your handling code here:
        frame = new JFrame("Exit");
        if(JOptionPane.showConfirmDialog(frame,"You Want to Exit?","Exit",
                JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_buttonExitActionPerformed

    private void buttonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonResetActionPerformed
        // TODO add your handling code here:
        textPepsi.setText("0");
        textFanta.setText("0");
        textDew.setText("0");
        textNormalMaggie.setText("0");
        textCheeseMaggie.setText("0");
        textCoffee.setText("0");
        textTea.setText("0");
        textWater.setText("0");
        textVanillaIceCream.setText("0");
        textChocklateIceCream.setText("0");
        textMelloJelloIcecream.setText("0");
        textNormalPizza.setText("0");
        textCheesePizza.setText("0");
        textCornPizza.setText("0");
        textNormalBurger.setText("0");
        textMayoneseBurger.setText("0");
        textCashEntered.setText("0");
        textTotalAnswer.setText(null);
        textTaxAnswer.setText(null);
        textChangeAnswer.setText(null);
        textTotalAnswer.setToolTipText("");
        //reseting the checked ones
        checkPepsi.setSelected(false);
        checkFanta.setSelected(false);
        checkDew.setSelected(false);
        checkNormalMaggie.setSelected(false);
        checkCheeseMaggie.setSelected(false);
        checkCoffee.setSelected(false);
        checkTea.setSelected(false);
        checkWater.setSelected(false);
        checkVanillaIceCream.setSelected(false);
        checkChocklateIceCream.setSelected(false);
        checkMelloJelloIceCream.setSelected(false);
        checkNormalPizza.setSelected(false);
        checkCheesePizza.setSelected(false);
        checkCornPizza.setSelected(false);
        checkNormalBurger.setSelected(false);
        checkMayoneseBurger.setSelected(false);
        //enable false the text field
        textPepsi.setEnabled(false);
        textFanta.setEnabled(false);
        textDew.setEnabled(false);
        textNormalMaggie.setEnabled(false);
        textCheeseMaggie.setEnabled(false);
        textWater.setEnabled(false);
        textTea.setEnabled(false);
        textCoffee.setEnabled(false);
        textVanillaIceCream.setEnabled(false);
        textChocklateIceCream.setEnabled(false);
        textMelloJelloIcecream.setEnabled(false);
        textNormalPizza.setEnabled(false);
        textCheesePizza.setEnabled(false);
        textCornPizza.setEnabled(false);
        textNormalBurger.setEnabled(false);
        textMayoneseBurger.setEnabled(false);
        
    }//GEN-LAST:event_buttonResetActionPerformed

    private void textPepsiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textPepsiKeyTyped
        // TODO add your handling code here:
        char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_textPepsiKeyTyped

    private void textFantaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFantaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFantaActionPerformed

    private void textFantaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFantaKeyTyped
        // TODO add your handling code here:
        char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_textFantaKeyTyped

    private void textDewKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDewKeyTyped
        // TODO add your handling code here:
        char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_textDewKeyTyped

    private void textWaterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textWaterKeyTyped
        // TODO add your handling code here:
        char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_textWaterKeyTyped

    private void textTeaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textTeaKeyTyped

        // TODO add your handling code here:
        char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_textTeaKeyTyped

    private void textCoffeeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCoffeeKeyTyped
        // TODO add your handling code here:
        char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_textCoffeeKeyTyped

    private void textVanillaIceCreamKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textVanillaIceCreamKeyTyped
        // TODO add your handling code here:
        char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_textVanillaIceCreamKeyTyped

    private void textChocklateIceCreamKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textChocklateIceCreamKeyTyped
        // TODO add your handling code here:
        char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_textChocklateIceCreamKeyTyped

    private void textMelloJelloIcecreamKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textMelloJelloIcecreamKeyTyped
        // TODO add your handling code here:
        char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_textMelloJelloIcecreamKeyTyped

    private void textNormalMaggieKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNormalMaggieKeyTyped
char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_textNormalMaggieKeyTyped

    private void textCheeseMaggieKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCheeseMaggieKeyTyped
char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_textCheeseMaggieKeyTyped

    private void textCashEnteredKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCashEnteredKeyTyped
        // TODO add your handling code here:
        char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_textCashEnteredKeyTyped

    private void textNormalPizzaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNormalPizzaKeyTyped
        // TODO add your handling code here:
        char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_textNormalPizzaKeyTyped

    private void textCheesePizzaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCheesePizzaKeyTyped
        // TODO add your handling code here:
        char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_textCheesePizzaKeyTyped

    private void textCornPizzaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCornPizzaKeyTyped
        // TODO add your handling code here:
        char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_textCornPizzaKeyTyped

    private void textNormalBurgerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNormalBurgerKeyTyped
        // TODO add your handling code here:
        char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_textNormalBurgerKeyTyped

    private void textMayoneseBurgerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textMayoneseBurgerKeyTyped
        // TODO add your handling code here:
        char isNumber = evt.getKeyChar();
        if((isNumber== KeyEvent.VK_BACK_SPACE)||(isNumber==KeyEvent.VK_DELETE)||(!Character.isDigit(isNumber)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_textMayoneseBurgerKeyTyped

    private void checkPepsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkPepsiActionPerformed
        // TODO add your handling code here:
        if(checkPepsi.isSelected())
        {
            textPepsi.setEnabled(true);
            textPepsi.requestFocus();
            textPepsi.setText("");
        }
        else
        {
            textPepsi.setEnabled(false);
            textPepsi.setText("0");
        }
    }//GEN-LAST:event_checkPepsiActionPerformed

    private void checkNormalMaggieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkNormalMaggieActionPerformed
if(checkNormalMaggie.isSelected())
        {
            textNormalMaggie.setEnabled(true);
            textNormalMaggie.requestFocus();
            textNormalMaggie.setText("");
        }
        else
        {
            textNormalMaggie.setEnabled(false);
            textNormalMaggie.setText("0");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkNormalMaggieActionPerformed

    private void checkWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkWaterActionPerformed
if(checkWater.isSelected())
        {
            textWater.setEnabled(true);
            textWater.requestFocus();
            textWater.setText("");
        }
        else
        {
            textWater.setEnabled(false);
            textWater.setText("0");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkWaterActionPerformed

    private void textTeaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textTeaActionPerformed
  // TODO add your handling code here:
    }//GEN-LAST:event_textTeaActionPerformed

    private void textCoffeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCoffeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textCoffeeActionPerformed

    private void textVanillaIceCreamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textVanillaIceCreamActionPerformed
   // TODO add your handling code here:
    }//GEN-LAST:event_textVanillaIceCreamActionPerformed

    private void checkTeaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkTeaActionPerformed
if(checkTea.isSelected())
        {
            textTea.setEnabled(true);
            textTea.requestFocus();
            textTea.setText("");
        }
        else
        {
            textTea.setEnabled(false);
            textTea.setText("0");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkTeaActionPerformed

    private void textPepsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPepsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPepsiActionPerformed

    private void textWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textWaterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textWaterActionPerformed

    private void checkCoffeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCoffeeActionPerformed
if(checkCoffee.isSelected())
        {
            textCoffee.setEnabled(true);
            textCoffee.requestFocus();
            textCoffee.setText("");
        }
        else
        {
            textCoffee.setEnabled(false);
            textCoffee.setText("0");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkCoffeeActionPerformed

    private void checkVanillaIceCreamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkVanillaIceCreamActionPerformed
if(checkVanillaIceCream.isSelected())
        {
            textVanillaIceCream.setEnabled(true);
            textVanillaIceCream.requestFocus();
            textVanillaIceCream.setText("");
        }
        else
        {
            textVanillaIceCream.setEnabled(false);
            textVanillaIceCream.setText("0");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkVanillaIceCreamActionPerformed

    private void textChocklateIceCreamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textChocklateIceCreamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textChocklateIceCreamActionPerformed

    private void checkChocklateIceCreamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkChocklateIceCreamActionPerformed
if(checkChocklateIceCream.isSelected())
        {
            textChocklateIceCream.setEnabled(true);
            textChocklateIceCream.requestFocus();
            textChocklateIceCream.setText("");
        }
        else
        {
            textChocklateIceCream.setEnabled(false);
            textChocklateIceCream.setText("0");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkChocklateIceCreamActionPerformed

    private void checkNormalPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkNormalPizzaActionPerformed
if(checkNormalPizza.isSelected())
        {
            textNormalPizza.setEnabled(true);
            textNormalPizza.requestFocus();
            textNormalPizza.setText("");
        }
        else
        {
            textNormalPizza.setEnabled(false);
            textNormalPizza.setText("0");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkNormalPizzaActionPerformed

    private void checkCheesePizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCheesePizzaActionPerformed
if(checkCheesePizza.isSelected())
        {
            textCheesePizza.setEnabled(true);
            textCheesePizza.requestFocus();
            textCheesePizza.setText("");
        }
        else
        {
            textCheesePizza.setEnabled(false);
            textCheesePizza.setText("0");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkCheesePizzaActionPerformed

    private void checkCornPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCornPizzaActionPerformed
if(checkCornPizza.isSelected())
        {
            textCornPizza.setEnabled(true);
            textCornPizza.requestFocus();
            textCornPizza.setText("");
        }
        else
        {
            textCornPizza.setEnabled(false);
            textCornPizza.setText("0");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkCornPizzaActionPerformed

    private void checkNormalBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkNormalBurgerActionPerformed
if(checkNormalBurger.isSelected())
        {
            textNormalBurger.setEnabled(true);
            textNormalBurger.requestFocus();
            textNormalBurger.setText("");
        }
        else
        {
            textNormalBurger.setEnabled(false);
            textNormalBurger.setText("0");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkNormalBurgerActionPerformed

    private void checkMayoneseBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkMayoneseBurgerActionPerformed
if(checkMayoneseBurger.isSelected())
        {
            textMayoneseBurger.setEnabled(true);
            textMayoneseBurger.requestFocus();
            textMayoneseBurger.setText("");
        }
        else
        {
            textMayoneseBurger.setEnabled(false);
            textMayoneseBurger.setText("0");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_checkMayoneseBurgerActionPerformed

    private void buttonTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTotalActionPerformed
        // TODO add your handling code here:
        String selectedMode = (String) CashMethods.getSelectedItem() ;
        itemDetails[0] = Integer.parseInt(textPepsi.getText());
        itemDetails[1] = Integer.parseInt(textFanta.getText());
        itemDetails[2] = Integer.parseInt(textDew.getText());
       itemDetails[3] = Integer.parseInt(textNormalMaggie.getText());
       itemDetails[4] = Integer.parseInt(textCheeseMaggie.getText());
       itemDetails[5] = Integer.parseInt(textWater.getText());
       itemDetails[6] = Integer.parseInt(textTea.getText());
       itemDetails[7] = Integer.parseInt(textCoffee.getText());
       itemDetails[8] = Integer.parseInt(textVanillaIceCream.getText());
       itemDetails[9] = Integer.parseInt(textChocklateIceCream.getText());
       itemDetails[10] = Integer.parseInt(textMelloJelloIcecream.getText());
       itemDetails[11] = Integer.parseInt(textNormalPizza.getText());
       itemDetails[12] = Integer.parseInt(textCheesePizza.getText());
       itemDetails[13] = Integer.parseInt(textCornPizza.getText());
       itemDetails[14] = Integer.parseInt(textNormalBurger.getText());
       itemDetails[15] = Integer.parseInt(textMayoneseBurger.getText());
       total = (itemDetails[0]*pepsi)+(itemDetails[1]*fanta)+(itemDetails[2]*dew)+(itemDetails[3]*normal_maggie)+(itemDetails[4]*cheese_maggie)+(itemDetails[5]*water)+(itemDetails[6]*tea)+(itemDetails[7]*coffee)+(itemDetails[8]*vanilla_icecream)+(itemDetails[9]*chocklate_icecream)+(itemDetails[10]*mellojello_icecream)+(itemDetails[11]*normal_pizza)+(itemDetails[12]*cheese_pizza)+(itemDetails[13]*corn_pizza)+(itemDetails[14]*normal_burger)+(itemDetails[15]*mayonese_burger);
       tax = (total*tax)/100;
       if(selectedMode.equals("Cash"))
       {
           double cashentered = Double.parseDouble(textCashEntered.getText());
         if(cashentered >= (total+tax))
         {
         textTotalAnswer.setToolTipText("Without Tax is Rs. "+total);
         total = total + tax ;
         textTotalAnswer.setText("Rs. "+total);
         textTaxAnswer.setText("Rs. "+tax);
         double changereturned = cashentered-total;
         textChangeAnswer.setText("Rs. "+changereturned);
         tax = 5;
         }
         else
         {
             JOptionPane.showMessageDialog(null, "Enter Enough Cash","Fast Food", JOptionPane.OK_OPTION);
         }
       }
       else
       {
        textTotalAnswer.setToolTipText("Without Tax is Rs. "+total);
        total = total + tax ;
        textTotalAnswer.setText("Rs. "+total);
         textTaxAnswer.setText("Rs. "+tax);
        tax = 5;
       }
    }//GEN-LAST:event_buttonTotalActionPerformed

    private void textTotalAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textTotalAnswerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textTotalAnswerActionPerformed

    private void CashMethodsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashMethodsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CashMethodsActionPerformed

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FastFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FastFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FastFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FastFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FastFood().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CashMethods;
    private javax.swing.JTextField Menu;
    private javax.swing.JTextField Menu1;
    private javax.swing.JTextField Menu2;
    private javax.swing.JTextField Menu3;
    private javax.swing.JPanel PanelForName;
    private javax.swing.JTextField QuantityBOught;
    private javax.swing.JTextField QuantityBOught1;
    private javax.swing.JTextField QuantityBOught2;
    private javax.swing.JTextField QuantityBOught3;
    private javax.swing.JButton buttonExit;
    private javax.swing.JButton buttonReset;
    private javax.swing.JButton buttonTotal;
    private javax.swing.JCheckBox checkCheeseMaggie;
    private javax.swing.JCheckBox checkCheesePizza;
    private javax.swing.JCheckBox checkChocklateIceCream;
    private javax.swing.JCheckBox checkCoffee;
    private javax.swing.JCheckBox checkCornPizza;
    private javax.swing.JCheckBox checkDew;
    private javax.swing.JCheckBox checkFanta;
    private javax.swing.JCheckBox checkMayoneseBurger;
    private javax.swing.JCheckBox checkMelloJelloIceCream;
    private javax.swing.JCheckBox checkNormalBurger;
    private javax.swing.JCheckBox checkNormalMaggie;
    private javax.swing.JCheckBox checkNormalPizza;
    private javax.swing.JCheckBox checkPepsi;
    private javax.swing.JCheckBox checkTea;
    private javax.swing.JCheckBox checkVanillaIceCream;
    private javax.swing.JCheckBox checkWater;
    private javax.swing.JTextField fieldofBurger;
    private javax.swing.JTextField fieldofDrinks;
    private javax.swing.JTextField fieldofIceCream;
    private javax.swing.JTextField fieldofMaggies;
    private javax.swing.JTextField fieldofPizza;
    private javax.swing.JTextField fieldofSoftDrinks;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel panelForBilling;
    private javax.swing.JPanel panelForBillingCounter;
    private javax.swing.JPanel panelForDrinksAndIceCreams;
    private javax.swing.JPanel panelForPizzaAndBurger;
    private javax.swing.JPanel panelForSoftDrinksAndMaggie;
    private javax.swing.JTextField textCashEntered;
    private javax.swing.JTextField textChange;
    private javax.swing.JTextField textChangeAnswer;
    private javax.swing.JTextField textCheeseMaggie;
    private javax.swing.JTextField textCheesePizza;
    private javax.swing.JTextField textChocklateIceCream;
    private javax.swing.JTextField textCoffee;
    private javax.swing.JTextField textCornPizza;
    private javax.swing.JTextField textDew;
    private javax.swing.JTextField textFanta;
    private javax.swing.JTextField textMayoneseBurger;
    private javax.swing.JTextField textMelloJelloIcecream;
    private javax.swing.JTextField textNormalBurger;
    private javax.swing.JTextField textNormalMaggie;
    private javax.swing.JTextField textNormalPizza;
    private javax.swing.JTextField textPepsi;
    private javax.swing.JTextField textTax;
    private javax.swing.JTextField textTaxAnswer;
    private javax.swing.JTextField textTea;
    private javax.swing.JTextField textTotal;
    private javax.swing.JTextField textTotalAnswer;
    private javax.swing.JTextField textVanillaIceCream;
    private javax.swing.JTextField textWater;
    // End of variables declaration//GEN-END:variables
}